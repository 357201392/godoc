swagger: "2.0"
info:
  title: beego Test API
  description: beego has a very cool tools to autogenerate documents for your API
  version: 1.0.0
  termsOfService: http://beego.me/
  contact:
    email: astaxie@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /v1/api
paths:
  /item/add:
    post:
      tags:
      - item
      description: add item
      operationId: ItemController.add item
      parameters:
      - in: formData
        name: item_type
        description: 项目类型 1常规项目  2单页项目
        type: integer
        format: int64
      responses:
        "200":
          description: '{int} models.User.Id'
        "403":
          description: body is empty
  /item/myList:
    get:
      tags:
      - item
      description: mylist
      operationId: ItemController.MyList
      parameters:
      - in: body
        name: body
        description: body for user content
        required: true
        schema:
          $ref: '#/definitions/models.User'
      responses:
        "200":
          description: '{int} models.User.Id'
        "403":
          description: body is empty
  /user/info:
    post:
      tags:
      - user
      description: get user info
      operationId: UserController.userinfo
      parameters:
      - in: body
        name: body
        description: body for user content
        required: true
        schema:
          $ref: '#/definitions/models.User'
      responses:
        "200":
          description: '{int} models.User.Id'
        "403":
          description: body is empty
  /user/login:
    post:
      tags:
      - user
      description: user login
      operationId: UserController.Login
      parameters:
      - in: body
        name: body
        description: body for user content
        required: true
        schema:
          $ref: '#/definitions/models.User'
      responses:
        "200":
          description: '{int} models.User.Id'
        "403":
          description: body is empty
  /user/register:
    post:
      tags:
      - user
      description: create users
      operationId: UserController.CreateUser
      parameters:
      - in: body
        name: body
        description: body for user content
        required: true
        schema:
          $ref: '#/definitions/models.User'
      responses:
        "200":
          description: '{int} models.User.Id'
        "403":
          description: body is empty
definitions:
  models.User:
    title: User
    type: object
    properties:
      CreatedAt:
        type: string
        format: string
      Email:
        type: string
      Id:
        type: integer
        format: int64
      Password:
        type: string
      UpdatedAt:
        type: string
        format: string
tags:
- name: user
  description: |
    Operations about Users
- name: item
  description: |
    Operations about Users
